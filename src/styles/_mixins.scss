@use "sass:color";
@use "sass:math";
@import "./variables";

// Internal Usage
@function lighten($lightness) {
  @if $lightness <= 0% {
    @return rgba(0,0,0, -1 * $lightness);
  } @else {
    @return rgba(255,255,255, 1 * $lightness);
  }
}

@mixin getClickableRaised($depth, $color: transparent) {
  outline: none;
  @include getRaised($depth, $color);
  @include getClickableRaisedBackground(($color));
}

@mixin getClickableRaisedBackground ($color: transparent) {
  background-color: $color;
  &:hover {
    background-image: linear-gradient(145deg, lighten(15%) 30%, $color 60%, lighten(-15%));
    &:active {
        background-image: linear-gradient(145deg, lighten(-15%) 30%, $color 60%, lighten(15%));
    }
}
}

@mixin getRaised($depth, $color: transparent) {
    $distance: math.abs($depth * 1px);
    cursor: pointer;
    background-color: $color;
    @if $depth >= 0 {
      box-shadow: $distance $distance $distance*2.5 lighten(-25%),
      $distance*-1 $distance*-1 $distance*1.5 lighten(85%);
    } @else {
      box-shadow: inset $distance $distance $distance lighten(-35%),
      inset $distance*-1 $distance*-1 $distance lighten(65%);
    }
}

@mixin getRaisedBorder($depth, $color: transparent) {
  $distance: $depth * 1px;
  cursor: pointer;
  background-color: $color;
  box-shadow: $distance $distance $distance*2.5 lighten(-55%),
      $distance*-1 $distance*-1 $distance*2.5 lighten(45%),
      inset $distance $distance $distance lighten(-55%),
      inset $distance*-1 $distance*-1 $distance lighten(45%);
}

@mixin getColorSet($color, $color-name) {
  .#{$color-name} {
    color: $color;
    @for $i from 1 to 10 {
      &-light-#{$i} {
        color: color.scale($color, $lightness: 10% * $i);
      }
      &-dark-#{$i} {
        color: color.scale($color, $lightness: -10% * $i);
      }

      &-bg {
        background-color: $color;
        &-light-#{$i} {
          background-color: color.scale($color, $lightness: 10% * $i);
        }
        &-dark-#{$i} {
          background-color: color.scale($color, $lightness: -10% * $i);
        }
      }
    } // end of for each
  }
}
